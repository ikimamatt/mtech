<?php

namespace App\Http\Controllers\Admin\MasterData;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Http\Requests\VulnerabilityLevelRequest;
use App\Models\Admin\MasterData\VulnerabilityLevel;

class VulnerabilityLevelController extends Controller
{
    /**
     * Display a listing of the resource.
     */
    private $vulnerabilityLevel;

    public function __construct(VulnerabilityLevel $vulnerabilityLevel)
    {
        $this->vulnerabilityLevel = $vulnerabilityLevel;
    }
    public function index()
    {
        return view('admin.master_data.vulnerability_level.index', ['datas' => $this->vulnerabilityLevel->getAllData()]);
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        return view('admin.master_data.vulnerability_level.create');
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(VulnerabilityLevelRequest $request)
    {
        try {
            $this->vulnerabilityLevel->create($request->validated());
        } catch (\Exception $e) {
            return redirect()
                ->back()
                ->withInput()
                ->with('error', 'Gagal tambah tingkat kerawanan');
        }
        return redirect()
            ->route('vulnerability-level.index')
            ->with('success', 'Berhasil tambah tingkat kerawanan');
    }

    /**
     * Display the specified resource.
     */
    public function show(string $id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(VulnerabilityLevel $vulnerabilityLevel)
    {
        return view('admin.master_data.vulnerability_level.edit', [
            'vulnerability_level' => $vulnerabilityLevel,
        ]);
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(VulnerabilityLevelRequest $request, VulnerabilityLevel $vulnerabilityLevel)
    {
        try {
            $vulnerabilityLevel->update($request->validated());
        } catch (\Exception $e) {
            return redirect()
                ->back()
                ->withInput()
                ->with('error', 'Gagal ubah tingkat kerawanan');
        }
        return redirect()
            ->route('vulnerability-level.index')
            ->with('success', 'Berhasil ubah tingkat kerawanan');
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(VulnerabilityLevel $vulnerabilityLevel)
    {
        $vulnerabilityLevel->delete();
        return redirect()
            ->route('vulnerability-level.index')
            ->with('success', 'Berhasil hapus tingkat kerawanan');
    }
}
